name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        ocaml-compiler:
          - 4.14.x
          - 5.0.x

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup OCaml
      uses: ocaml/setup-ocaml@v2
      with:
        ocaml-compiler: ${{ matrix.ocaml-compiler }}

    - name: Install dependencies
      run: opam install . --deps-only --with-test

    - name: Build
      run: opam exec -- dune build

    - name: Run tests
      run: opam exec -- dune runtest

    - name: Check formatting
      run: opam exec -- dune build @fmt

    - name: Generate test coverage report
      run: |
        opam install bisect_ppx --yes
        opam exec -- dune runtest --instrument-with bisect_ppx
        opam exec -- bisect-ppx-report html
      continue-on-error: true

    - name: Comment test results on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { owner, repo } = context.repo;
          const pull_number = context.payload.pull_request.number;
          
          const comment = `✅ **CI Build Completed**
          
          OCaml version: ${{ matrix.ocaml-compiler }}
          - ✅ Build successful
          - ✅ Tests passed
          - ✅ Code formatting checked
          
          The code is ready for GitHub Copilot review!`;
          
          await github.rest.issues.createComment({
            owner,
            repo,
            issue_number: pull_number,
            body: comment
          });
